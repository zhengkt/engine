%include {
    #include <assert.h>
}

%token_type {int}

%syntax_error {
    fprintf(stderr, "Syntax error\n");
}

%left PLUS MINUS.
%left TIMES DIVIDE.

program ::= expr(A). { printf("Result = %d\\n", A);}
expr(A) ::= expr(B) PLUS expr(C). { A = B + C; printf("PLUS : A : %d, B : %d, C : %d\n", A, B, C); }
expr(A) ::= expr(B) MINUS expr(C). { A = B - C; printf("MINUS : A : %d, B : %d, C : %d\\n", A, B, C); }
expr(A) ::= expr(B) TIMES expr(C). { A = B*C; printf("TIMES : A : %d, B : %d, C : %d\n", A, B, C); }
expr(A) ::= expr(B) DIVIDE expr(C). {
    printf("DIVIDE : A : %d, B : %d\n", A, B);
    if (C !=0 )
        A = B/C;
    else
        fprintf(stderr, "divide by zero\n");
}
expr(A) ::= LPAR expr(B) RPAR. { printf("LPAR and RPAR : A : %d, B : %d\n", A, B); A = (B); }
expr(A) ::= INTEGER(B). { printf("INTERGER (B) : A : %d, B : %d\n", A, B); A=B; }
